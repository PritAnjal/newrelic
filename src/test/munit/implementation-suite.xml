<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="implementation-suite.xml" />
	<munit:test name="sendMessageToAWSSQS-test_Success" doc:id="c71bdca4-8d97-42d3-b07e-a11f66e03cac" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Check Null payload" doc:id="f366450b-eb7b-41a5-96bb-3bcf0698432a" processor="validation:is-not-null">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="07ff9d33-77ab-4824-8924-420ae7ce98e8" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://sendMessageToAWSSQStestSuccess\mock_payload.dwl')]" mediaType="application/json" encoding="UTF-8" />
					<munit-tools:attributes value="#[readUrl('classpath://sendMessageToAWSSQStestSuccess\mock_attributes.dwl')]" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock Send message to SQS" doc:id="0146bc85-7705-4075-812d-a5c1a668b36d" processor="sqs:send-message">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="936c47d7-d221-408a-9c72-157dfad1ba17" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://sendMessageToAWSSQStestSuccess\mock_payload1.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:attributes value="#[readUrl('classpath://sendMessageToAWSSQStestSuccess\mock_attributes1.dwl')]" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="20db2560-c3d8-400a-845c-28a0c4c4b16e" >
				<munit:payload value="#[output application/json --- readUrl('classpath://sendMessageToAWSSQStestSuccess\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://sendMessageToAWSSQStestSuccess\set-event_attributes.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to sendMessageToAWSSQS" doc:id="19024ceb-2a19-4fb0-a64f-6188bbeaa364" name="sendMessageToAWSSQS"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="ce75dfea-b86d-424f-a176-f7004a5618d4" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import sendMessageToAWSSQStestSuccess::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="receiveMessageFromSQSQueue-test_Success" doc:id="1659d2a0-9928-4768-8784-8bfd200d083c" >
		<munit:behavior >
			<munit:set-event doc:name="Set Input" doc:id="34405d30-0e31-4af0-8806-e4f89cd4afa4" >
				<munit:payload value="#[output text/plain --- readUrl('classpath://receiveMessageFromSQSQueuetestSuccess\set-event_payload1.dwl')]" encoding="UTF-8" mediaType="text/plain" />
				<munit:attributes value="#[readUrl('classpath://receiveMessageFromSQSQueuetestSuccess\set-event_attributes1.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to receiveMessageFromSQSQueue" doc:id="4dd6a1b0-5721-411d-bc56-0618fe942733" name="receiveMessageFromSQSQueue"/>
		</munit:execution>
	</munit:test>
	<munit:test name="receiveMessageFromSQSQueue-test_Failure" doc:id="b50fa52d-5e9f-4a6c-91e4-58f80763eaa6">
			<munit:behavior>
				<munit:set-event doc:name="Set Input" doc:id="dca63366-c50a-4cdd-8d61-4f92447f366a">
				<munit:payload value='#[output text/json --- {"Name" : "Anjali"}]' encoding="UTF-8" mediaType="text/json" />
				<munit:attributes value="#[readUrl('classpath://receiveMessageFromSQSQueuetestSuccess\set-event_attributes1.dwl')]" />
				</munit:set-event>
			</munit:behavior>
			<munit:execution>
				<flow-ref doc:name="receiveMessageFromSQSQueue" doc:id="29b728cf-bfb4-4179-bb93-a00b1efceee2" name="receiveMessageFromSQSQueue" />
			</munit:execution>
		</munit:test>
	<munit:test name="implementation-test-suite-sendMessageToAWSSQSTest_Null_Failure" doc:id="00ade566-8875-422b-9c79-bcdd9ceb7f33" description="Test">
			<munit:behavior>
				<munit:set-event doc:name="Set Event" doc:id="a602b312-44d7-46f5-bb27-1f47f3bdd3c1" />
			</munit:behavior>
			<munit:execution>
				<flow-ref doc:name="Flow-ref to sendMessageToAWSSQS" doc:id="b5d70977-a1b4-4b74-85f4-7c0363be3d57" name="sendMessageToAWSSQS" />
			</munit:execution>
		</munit:test>


</mule>
